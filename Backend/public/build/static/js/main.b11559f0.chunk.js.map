{"version":3,"sources":["components/Img1.jpg","components/img2.jpg","components/img3.jpg","components/img4.jpg","components/Signup.js","components/Application.js","components/Login.js","components/Carousel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","baseURL","process","Signup","state","firstName","lastName","username","password","handleChange","event","setState","currentTarget","id","value","createUser","preventDefault","fetch","method","body","JSON","stringify","address","city","zip","description","yearBuilt","loanPurpose","ssn","headers","then","res","json","resJson","signUp","catch","error","console","className","onSubmit","this","type","onChange","placeholder","name","Component","Application","updateUser","loginInfo","parse","localStorage","getItem","log","setItem","getUser","props","loginUsername","style","width","margin","Login","loginPassword","isLogin","validated","login","token","userid","logout","clear","onClick","color","marginLeft","imageId","Carousel","img","Img1","nextClick","Img2","Img3","Img4","prevClick","src","alt","App","isSignUp","bind","height","viewBox","class","fill","xmlns","fill-rule","d","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b11559f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Img1.8883ae57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.f4215797.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.f5f6e194.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img4.41479db2.jpg\";","import React, { Component} from 'react';\r\n\r\nconst baseURL = process.env.REACT_APP_BACKEND_URL  || \"http://localhost:3003\" ;\r\nexport default class Signup extends Component {\r\n    state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        baseURL: baseURL\r\n      }\r\n  \r\n      handleChange = (event) => {\r\n        this.setState({ [event.currentTarget.id]: event.currentTarget.value})\r\n      }\r\n\r\n      //Sasi - create route function\r\n    createUser = (event) => {\r\n      event.preventDefault();\r\n\r\n      fetch(this.state.baseURL + \"/mortgage\", {\r\n        method: 'POST',\r\n        body: JSON.stringify({firstName: this.state.firstName, \r\n                              lastName: this.state.lastName, \r\n                              username: this.state.username, \r\n                              password: this.state.password,\r\n                              address: \"\",\r\n                              city: \"\",\r\n                              state: \"\",\r\n                              zip: \"\",\r\n                              description: \"\",\r\n                              yearBuilt: \"\",\r\n                              loanPurpose: \"\",\r\n                              ssn: \"\"}\r\n                              ),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }).then (res => res.json())\r\n        .then (resJson => {\r\n          this.setState({\r\n            signUp:false,\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            username: \"\",\r\n            password: \"\"\r\n          })\r\n      }).catch (error => console.error({'Error': error}))\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <form className=\"form justify-content-center\" onSubmit={this.createUser}>\r\n            <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.firstName} placeholder=\"First name\" id=\"firstName\" name=\"firstName\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\"  onChange={this.handleChange} value={this.state.lastName} placeholder=\"Last name\" id=\"lastName\" name=\"lastName\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.username} id=\"username\" name=\"username\" placeholder=\"email\"/>\r\n              </div>\r\n              <div className=\"form-group\"> \r\n                  <input  className=\"form-control\" type=\"password\" onChange={this.handleChange} value={this.state.password} id=\"password\" name=\"password\" placeholder=\"Password\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"btn btn-primary form-control\" type=\"submit\" value=\"Sign up\"/>\r\n              </div>  \r\n            </form>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React, { Component} from 'react';\r\n\r\nconst baseURL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:3003\";\r\nexport default class Application extends Component {\r\n    state = {\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        description: \"\",\r\n        yearBuilt: \"\",\r\n        loanPurpose: \"\",\r\n        ssn: \"\",\r\n        baseURL: baseURL\r\n      }\r\n  \r\n      handleChange = (event) => {\r\n        this.setState({ [event.currentTarget.id]: event.currentTarget.value})\r\n      }\r\n    \r\n        //Sasi - create route function\r\n    updateUser = (event) => {\r\n        event.preventDefault();\r\n        let loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\r\n        fetch(this.state.baseURL +\"/mortgage\", {\r\n          method: 'PUT',\r\n          body: JSON.stringify({address: this.state.address,\r\n                                city: this.state.city,\r\n                                state: this.state.state,\r\n                                zip: this.state.zip,\r\n                                description: this.state.description,\r\n                                yearBuilt: this.state.yearBuilt,\r\n                                loanPurpose: this.state.loanPurpose,\r\n                                ssn: this.state.ssn,\r\n                                id: loginInfo.id}\r\n                                ),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }).then (res => res.json())\r\n          .then (resJson => {console.log(resJson);\r\n            this.setState({\r\n              signUp:false,\r\n              address: resJson.address,\r\n              city: resJson.city,\r\n              state: resJson.state,\r\n              zip: resJson.zip,\r\n              description: resJson.description,\r\n              yearBuilt: resJson.yearBuilt,\r\n              loanPurpose: resJson.loanPurpose,\r\n              ssn: resJson.ssn\r\n            }) \r\n            localStorage.setItem(\"loginInfo\",JSON.stringify({address: resJson.address,\r\n                                                            city: resJson.city,\r\n                                                            state: resJson.state,\r\n                                                            zip: resJson.zip,\r\n                                                            description: resJson.description,\r\n                                                            yearBuilt: resJson.yearBuilt,\r\n                                                            loanPurpose: resJson.loanPurpose,\r\n                                                            ssn: resJson.ssn}));\r\n        }).catch (error => console.error({'Error': error}))\r\n  \r\n      }\r\n\r\n  \r\n      getUser = () => {\r\n        fetch(this.state.baseURL + \"/mortgage/\"+ this.props.loginUsername).then (res => res.json())\r\n        .then (resJson => {console.log(resJson);\r\n           this.setState({\r\n            address: resJson.address,\r\n            city: resJson.city,\r\n            state: resJson.state,\r\n            zip: resJson.zip,\r\n            description: resJson.description,\r\n            yearBuilt: resJson.yearBuilt,\r\n            loanPurpose: resJson.loanPurpose,\r\n            ssn: resJson.ssn\r\n          }) \r\n          localStorage.setItem(\"loginInfo\",JSON.stringify({loginUsername: this.props.loginUsername,\r\n                                                          id:resJson.id,\r\n                                                          address: resJson.address,\r\n                                                          city: resJson.city,\r\n                                                          state: resJson.state,\r\n                                                          zip: resJson.zip,\r\n                                                          description: resJson.description,\r\n                                                          yearBuilt: resJson.yearBuilt,\r\n                                                          loanPurpose: resJson.loanPurpose,\r\n                                                          ssn: resJson.ssn}));\r\n      }).catch (error => console.error({'Error': error}));\r\n      \r\n      }\r\n  \r\n\r\n\r\n    componentDidMount() {\r\n     this.getUser(); \r\n    let loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\r\n    if(loginInfo)\r\n    this.setState({address: loginInfo.address,\r\n                    city: loginInfo.city,\r\n                    state: loginInfo.state,\r\n                    zip: loginInfo.zip,\r\n                    description: loginInfo.description,\r\n                    yearBuilt: loginInfo.yearBuilt,\r\n                    loanPurpose: loginInfo.loanPurpose,\r\n                    ssn: loginInfo.ssn});\r\n    }  \r\n    render() {\r\n      return (\r\n        <div>\r\n            <form className=\"form justify-content-center\" style={{width:\"80%\", margin:\"10px auto\"}} onSubmit={this.updateUser}>\r\n            <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.address} placeholder=\"Property Address\" id=\"address\" name=\"address\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\"  onChange={this.handleChange} value={this.state.city} placeholder=\"City\" id=\"city\" name=\"city\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.state} id=\"state\" name=\"state\" placeholder=\"State\"/>\r\n              </div>\r\n              <div className=\"form-group\"> \r\n                  <input  className=\"form-control\" type=\"number\" onChange={this.handleChange} value={this.state.zip} id=\"zip\" name=\"zip\" placeholder=\"Zip\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.description} id=\"description\" name=\"description\" placeholder=\"Property Description\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"number\" onChange={this.handleChange} value={this.state.yearBuilt} id=\"yearBuilt\" name=\"yearBuilt\" placeholder=\"Year Built\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.loanPurpose} id=\"loanPurpose\" name=\"loanPurpose\" placeholder=\"Purpose of Loan\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"password\" onChange={this.handleChange} value={this.state.ssn} id=\"ssn\" name=\"ssn\" placeholder=\"Borrower's SSN\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"btn btn-success form-control\" style={{width:\"70%\"}} type=\"submit\" value=\"Update\"/>\r\n              </div>  \r\n            </form>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React, { Component} from 'react';\r\nimport Application from \"../components/Application\";\r\nconst baseURL = process.env.REACT_APP_BACKEND_URL  || \"http://localhost:3003\";\r\nexport default class Login extends Component {\r\n    state = {\r\n        loginUsername: \"\",\r\n        loginPassword: \"\",\r\n        baseURL: baseURL,\r\n        isLogin:false,\r\n        loginInfo:{},\r\n        validated:false\r\n      }\r\n  \r\n      handleChange = (event) => {\r\n        this.setState({ [event.currentTarget.id]: event.currentTarget.value})\r\n      }\r\n\r\n      //Sasi - create route function\r\n    login = (event) => {\r\n    event.preventDefault();\r\n    fetch(this.state.baseURL + '/mortgage/login', {\r\n        method: 'POST',\r\n        body: JSON.stringify({username: this.state.loginUsername, \r\n                            password: this.state.loginPassword}\r\n                            ),\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n        }\r\n    }).then (res => res.json())\r\n        .then (resJson => {console.log(resJson);\r\n        this.setState({\r\n            loginUsername: resJson.username,\r\n            loginPassword: \"\",\r\n            token:resJson.token,\r\n            userid:resJson.id,\r\n            isLogin:true,\r\n            validated:resJson.validated\r\n        })\r\n        localStorage.setItem(\"loginInfo\",JSON.stringify({id:resJson.id, loginPassword: resJson.password, loginUsername:resJson.username, token:resJson.token, address: resJson.address,\r\n                                                          city: resJson.city,\r\n                                                          state: resJson.state,\r\n                                                          zip: resJson.zip,\r\n                                                          description: resJson.description,\r\n                                                          yearBuilt: resJson.yearBuilt,\r\n                                                          loanPurpose: resJson.loanPurpose,\r\n                                                          ssn: resJson.ssn,\r\n                                                        validated: resJson.validated}));\r\n      }).catch (error => console.error({'Error': error}))\r\n    \r\n    }\r\n\r\n    logout = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loginUsername: \"\",\r\n                        loginPassword: \"\",\r\n                        isLogin: false, \r\n                        token:\"\"});\r\n        localStorage.clear();\r\n    }\r\n\r\n    componentDidMount() {\r\n      //Sasi = Storing token and userid\r\n      let loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\r\n      console.log(loginInfo);\r\n      if(loginInfo && loginInfo.token)\r\n      this.setState({token:loginInfo.token, userid:loginInfo.id, loginUsername:loginInfo.loginUsername, login:true, loginInfo:loginInfo});\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div >       \r\n                    {this.state.isLogin?<div className=\"loginDiv\"> <button className=\"btn btn-danger form-control\" style={{margin:\"10px auto\", width:\"100px\"}} onClick={this.logout}>Logout</button>\r\n                       {this.state.validated? <div style={{color:\"green\", margin:\"auto\"}}><h4>email verified</h4></div>:<div style={{color:\"red\", margin:\"10px auto\"}}><h4>email not verified! Check your email for verification link</h4> </div>}\r\n                       <Application loginUsername={this.state.loginUsername}/> </div>:\r\n                    <div>\r\n                      <ul className=\"nav justify-content-center\">\r\n                      <li className=\"nav-item\">\r\n                        <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.loginUsername} id=\"loginUsername\" name=\"loginUsername\" placeholder=\"email (Username)\"/>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                          <input  className=\"form-control\" type=\"password\" onChange={this.handleChange} value={this.state.loginPassword} id=\"loginPassword\" name=\"loginPassword\" placeholder=\"Password\"/>\r\n                      </li>\r\n                      <li className=\"nav-item\">    \r\n                      <button className=\"btn btn-dark form-control\" style={{marginLeft:\"6px\"}}onClick={this.login}>Login</button>\r\n                      </li>\r\n                    </ul>\r\n                  </div>}\r\n        </div>\r\n      )\r\n    }\r\n  }","import React, { Component} from 'react';\r\nimport Img1 from \"./Img1.jpg\";\r\nimport Img2 from \"./img2.jpg\";\r\nimport Img3 from \"./img3.jpg\";\r\nimport Img4 from \"./img4.jpg\";\r\n\r\nconst baseURL = process.env.REACT_APP_BACKEND_URL  || \"http://localhost:3003\" ;\r\nvar imageId = 1;\r\nexport default class Carousel extends Component {\r\n    state = {\r\n        baseURL: baseURL,\r\n        img: Img1\r\n      }\r\n\r\n      nextClick = (event)=> {\r\n        event.preventDefault();   \r\n        console.log(\"here\");\r\n        if (imageId < 4)\r\n        {\r\n          imageId+=1;\r\n        }\r\n            \r\n        else\r\n        imageId=1;\r\n\r\n        switch(imageId){\r\n          case 1:return this.setState({img:Img1}); \r\n          case 2:return this.setState({img:Img2});\r\n          case 3:return this.setState({img:Img3});\r\n          case 4:return this.setState({img:Img4});\r\n        }\r\n    \r\n      }\r\n      \r\n      //carousel prev button click function\r\n      prevClick = (event)=> {\r\n        event.preventDefault();\r\n        if (imageId > 1)\r\n        imageId-=1;\r\n      \r\n        else\r\n        imageId=4;\r\n      \r\n        switch(imageId){\r\n          case 1:return this.setState({img:Img1}); \r\n          case 2:return this.setState({img:Img2});\r\n          case 3:return this.setState({img:Img3});\r\n          case 4:return this.setState({img:Img4});\r\n        }\r\n      \r\n      }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"carousel\">\r\n\r\n            <img className=\"img-carousel\" src={this.state.img} alt=\"img\"/>\r\n\r\n            <button id=\"prev\" onClick={this.prevClick}>&#10094;</button>\r\n            <button id=\"next\" onClick={this.nextClick}>&#10095;</button>\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React, { Component} from 'react';\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport Carousel from \"./components/Carousel\";\n//import Application from \"./components/Application\";\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    isSignUp:false\n  }\n  this.signUp = this.signUp.bind(this);\n}\n  signUp () {\n    //event.preventDefault();\n    console.log(\"Here\");\n    this.setState({isSignUp: !this.state.isSignUp});\n    console.log(this.state.isSignUp);\n    }\n  \n   componentDidMount() {\n      //Sasi = Storing token and userid\n      let loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n      console.log(loginInfo);\n    }\n  render() {\n    return (\n      <div className=\"main\">\n            <div className=\"jumbotron\"> \n              <svg width=\"100px\" height=\"100px\" viewBox=\"0 0 16 16\" class=\"bi bi-house-door\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill-rule=\"evenodd\" d=\"M7.646 1.146a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 .146.354v7a.5.5 0 0 1-.5.5H9.5a.5.5 0 0 1-.5-.5v-4H7v4a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .146-.354l6-6zM2.5 7.707V14H6v-4a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4h3.5V7.707L8 2.207l-5.5 5.5z\"/>\n              <path fill-rule=\"evenodd\" d=\"M13 2.5V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"/>\n             </svg><br></br>Mortgage Application\n              <h6>Submit your details now to get your mortgage approved!</h6>\n            </div>\n             {this.state.isSignUp ? \n             <div className=\"login\">\n              <Login/>\n              {/*<div style={{marginTop:\"0px\"}}>\n               New User? Signup\n              <button className=\"loginButton\" onClick={this.signUp}> here </button>\n              </div> */}\n             </div>\n             :\n             <div>\n             <div className=\"signUp\">\n              <Signup signUp={this.signUp}/>\n              <div style={{marginTop:\"0px\"}}>\n              Already have an account? <b>Login \n              <button className=\"loginButton\" onClick={this.signUp}> here </button></b>\n              </div>\n            </div>\n            <Carousel/>\n            </div>\n             }         \n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}