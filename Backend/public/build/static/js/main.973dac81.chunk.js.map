{"version":3,"sources":["components/Signup.js","components/Application.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","process","REACT_APP_BACKEND_URL","Signup","state","firstName","lastName","username","password","handleChange","event","setState","currentTarget","id","value","createUser","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","resJson","signUp","catch","error","console","className","style","width","margin","onSubmit","this","type","onChange","placeholder","name","Component","Application","address","city","zip","description","yearBuilt","loanPurpose","ssn","Login","loginUsername","loginPassword","isLogin","login","log","token","userid","localStorage","setItem","logout","marginLeft","onClick","App","isSignUp","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.973dac81.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\n\r\nconst baseURL = process.env.REACT_APP_BACKEND_URL /*|| \"http://localhost:3003/mortgage\"*/;\r\nexport default class Signup extends Component {\r\n    state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        baseURL: baseURL\r\n      }\r\n  \r\n      handleChange = (event) => {\r\n        this.setState({ [event.currentTarget.id]: event.currentTarget.value})\r\n      }\r\n\r\n      //Sasi - create route function\r\n    createUser = (event) => {\r\n      event.preventDefault();\r\n\r\n      fetch(this.state.baseURL , {\r\n        method: 'POST',\r\n        body: JSON.stringify({firstName: this.state.firstName, \r\n                              lastName: this.state.lastName, \r\n                              username: this.state.username, \r\n                              password: this.state.password}\r\n                              ),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }).then (res => res.json())\r\n        .then (resJson => {\r\n          this.setState({\r\n            signUp:false,\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            username: \"\",\r\n            password: \"\"\r\n          })\r\n      }).catch (error => console.error({'Error': error}))\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <form className=\"form justify-content-center\" style={{width:\"50%\", margin:\"50px\"}} onSubmit={this.createUser}>\r\n            <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.firstName} placeholder=\"First name\" id=\"firstName\" name=\"firstName\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\"  onChange={this.handleChange} value={this.state.lastName} placeholder=\"Last name\" id=\"lastName\" name=\"lastName\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.username} id=\"username\" name=\"username\" placeholder=\"email\"/>\r\n              </div>\r\n              <div className=\"form-group\"> \r\n                  <input  className=\"form-control\" type=\"password\" onChange={this.handleChange} value={this.state.password} id=\"password\" name=\"password\" placeholder=\"Password\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"btn btn-primary form-control\" style={{width:\"70%\"}} type=\"submit\" value=\"Sign up\"/>\r\n              </div>  \r\n            </form>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React, { Component} from 'react';\r\n\r\nconst baseURL = process.env.REACT_APP_BACKEND_URL /*|| \"http://localhost:3003/mortgage\"*/;\r\nexport default class Application extends Component {\r\n    state = {\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        description: \"\",\r\n        yearBuilt: \"\",\r\n        loanPurpose: \"\",\r\n        ssn: \"\",\r\n        baseURL: baseURL\r\n      }\r\n  \r\n      handleChange = (event) => {\r\n        this.setState({ [event.currentTarget.id]: event.currentTarget.value})\r\n      }\r\n\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <form className=\"form justify-content-center\" style={{width:\"50%\", margin:\"50px\"}} onSubmit={this.createUser}>\r\n            <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.address} placeholder=\"Property Address\" id=\"address\" name=\"address\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\"  onChange={this.handleChange} value={this.state.city} placeholder=\"City\" id=\"city\" name=\"city\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.state} id=\"state\" name=\"state\" placeholder=\"State\"/>\r\n              </div>\r\n              <div className=\"form-group\"> \r\n                  <input  className=\"form-control\" type=\"number\" onChange={this.handleChange} value={this.state.zip} id=\"zip\" name=\"zip\" placeholder=\"Zip\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.description} id=\"description\" name=\"description\" placeholder=\"Property Description\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"number\" onChange={this.handleChange} value={this.state.yearBuilt} id=\"yearBuilt\" name=\"yearBuilt\" placeholder=\"Year Built\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.loanPurpose} id=\"loanPurpose\" name=\"loanPurpose\" placeholder=\"Purpose of Loan\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"form-control\" type=\"password\" onChange={this.handleChange} value={this.state.ssn} id=\"ssn\" name=\"ssn\" placeholder=\"Borrower's SSN\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input className=\"btn btn-success form-control\" style={{width:\"70%\"}} type=\"submit\" value=\"Update\"/>\r\n              </div>  \r\n            </form>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React, { Component} from 'react';\r\nimport Application from \"../components/Application\";\r\nconst baseURL = process.env.REACT_APP_BACKEND_URL /*|| \"http://localhost:3003/mortgage\"*/;\r\nexport default class Login extends Component {\r\n    state = {\r\n        loginUsername: \"\",\r\n        loginPassword: \"\",\r\n        baseURL: baseURL,\r\n        isLogin:false\r\n      }\r\n  \r\n      handleChange = (event) => {\r\n        this.setState({ [event.currentTarget.id]: event.currentTarget.value})\r\n      }\r\n\r\n      //Sasi - create route function\r\n    login = (event) => {\r\n    event.preventDefault();\r\n    fetch(this.state.baseURL + '/login', {\r\n        method: 'POST',\r\n        body: JSON.stringify({username: this.state.loginUsername, \r\n                            password: this.state.loginPassword}\r\n                            ),\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n        }\r\n    }).then (res => res.json())\r\n        .then (resJson => {console.log(resJson);\r\n        this.setState({\r\n            loginUsername: resJson.username,\r\n            loginPassword: \"\",\r\n            token:resJson.token,\r\n            userid:resJson.id,\r\n            isLogin:true\r\n        })\r\n        localStorage.setItem(\"loginInfo\",JSON.stringify({id:resJson.id, loginPassword: resJson.password, loginUsername:resJson.username, token:resJson.token}));\r\n    }).catch (error => console.error({'Error': error}))\r\n    \r\n    }\r\n\r\n    logout = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loginUsername: \"\",\r\n                        loginPassword: \"\",\r\n                        isLogin: false, \r\n                        token:\"\"});\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>       \r\n                    {this.state.isLogin?<div> <button className=\"btn btn-danger form-control\" style={{marginLeft:\"100px\", width:\"100px\"}} onClick={this.logout}>Logout</button>\r\n                       <Application/> </div>:<ul className=\"nav justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                      <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.loginUsername} id=\"loginUsername\" name=\"loginUsername\" placeholder=\"email (Username)\"/>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <input  className=\"form-control\" type=\"password\" onChange={this.handleChange} value={this.state.loginPassword} id=\"loginPassword\" name=\"loginPassword\" placeholder=\"Password\"/>\r\n                    </li>\r\n                    <li className=\"nav-item\">    \r\n                    <button className=\"btn btn-dark form-control\" style={{marginLeft:\"6px\"}}onClick={this.login}>Login</button>\r\n                    </li>\r\n                  </ul>}\r\n        </div>\r\n      )\r\n    }\r\n  }","import React, { Component} from 'react';\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\n//import Application from \"./components/Application\";\n\nexport default class App extends Component {\n  state = {\n    isSignUp:false\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <Signup/>\n        <Login/>\n\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}